import { sdgList } from "@/components/ProjectForm/SdgOptions";
import { create } from "zustand";

const useProjectFormStore = create((set, get) => ({
  projectID: "",
  standar: "",
  vintage: "",
  volumen: "",
  name: "",
  projectLink: "",
  tech: "",
  corsia: "",
  sdg: "",
  pais: "",
  continente: "",
  disponible: "",
  stock: "",
  precioVenta: "",
  precioCorp: "",
  floorPrice: "",
  purchasePrice: "",
  thirdPartPrice: "",
  contrato: "",
  mktDate: "",
  proveedor: "",
  mailingList: "",
  brokerList: "",
  misha: "",
  equipo: "",
  tdService: "",
  typeOfContract: "",
  actualDataVolume: "",
  netVolume: "",
  sectorTD: "",
  status: "",
  stage: "",
  rpStartDate: "",
  rpEndDate: "",
  firstCPDate: "",
  ccb: "",
  ccp: "",
  icroa: "",
  prePayment: "",
  projectType: "",
  regulatedMarket: "",
  methodology: "",
  registrationDate: "",
  buyerCountry: [],
  doubleCountingRisk: "",
  sede: "",
  notas: "",
  notasExtra: "",
  files: [],
  tdInfo: "",
  sdgSelected: [],
  sdgImages: [],
  checkedState: [],
  sdgListLength: sdgList?.length,
  showModal: false,
  error: "",
  errorFields: {},

  // Función para resetear el store a su estado inicial
  reset: () => {
    set({
      projectID: "",
      standar: "",
      vintage: "",
      volumen: "",
      name: "",
      projectLink: "",
      tech: "",
      corsia: "",
      sdg: "",
      pais: "",
      continente: "",
      disponible: "",
      stock: "",
      precioVenta: "",
      precioCorp: "",
      floorPrice: "",
      purchasePrice: "",
      thirdPartPrice: "",
      contrato: "",
      mktDate: "",
      proveedor: "",
      mailingList: "",
      brokerList: "",
      misha: "",
      equipo: "",
      tdService: "",
      typeOfContract: "",
      actualDataVolume: "",
      netVolume: "",
      sectorTD: "",
      status: "",
      stage: "",
      rpStartDate: "",
      rpEndDate: "",
      firstCPDate: "",
      ccb: "",
      ccp: "",
      icroa: "",
      prePayment: "",
      projectType: "",
      regulatedMarket: "",
      methodology: "",
      registrationDate: "",
      buyerCountry: [],
      doubleCountingRisk: "",
      sede: "",
      notas: "",
      notasExtra: "",
      files: [],
      tdInfo: "",
      sdgSelected: [],
      sdgImages: [],
      checkedState: new Array(sdgList.length).fill(false),
      showModal: false,
      error: "",
      errorFields: {},
    });
  },

  // funciones para modificar el estado -> fn generica
  setField: (field, value) => set((state) => ({ [field]: value })),

  setProjectId: (value) => set({ projectID: value }),
  setStandar: (value) => set({ standar: value }),
  setVintage: (value) => set({ vintage: value }),
  setVolumen: (value) => set({ volumen: value }),
  setName: (value) => set({ name: value }),
  setProjectLink: (value) => set({ projectLink: value }),
  setTech: (value) => set({ tech: value }),
  setCorsia: (value) => set({ corsia: value }),
  setPais: (value) => set({ pais: value }),
  setContinente: (value) => set({ continente: value }),
  setDisponible: (value) => set({ disponible: value }),
  setStock: (value) => set({ stock: value }),
  setPrecioVenta: (value) => set({ precioVenta: value }),
  setPrecioCorp: (value) => set({ precioCorp: value }),
  setFloorPrice: (value) => set({ floorPrice: value }),
  setPurchasePrice: (value) => set({ purchasePrice: value }),
  setThirdPartPrice: (value) => set({ thirdPartPrice: value }),
  setContrato: (value) => set({ contrato: value }),
  setMktDate: (value) => set({ mktDate: value }),
  setProveedor: (value) => set({ proveedor: value }),
  setMailingList: (value) => set({ mailingList: value }),
  setBrokerList: (value) => set({ brokerList: value }),
  setMisha: (value) => set({ misha: value }),
  setEquipo: (value) => {
    set({ equipo: value });
    if (value === "Commercial") {
      set({
        tdService: "",
        typeOfContract: "",
        actualDataVolume: "",
        netVolume: "",
        sectorTD: "",
        tdInfo: "",
      });
    }
  },
  // Funciones para TD Section
  setTdService: (value) => {
    set({ tdService: value, tdInfo: value !== "" ? "Yes" : "" });
  },
  setTypeOfContract: (value) => set({ typeOfContract: value }),
  setActualDataVolume: (value) => set({ actualDataVolume: value }),
  setNetVolume: (value) => set({ netVolume: value }),
  setSectorTD: (value) => {
    set({ sectorTD: value, tdInfo: value !== "" ? "Yes" : "" });
  },
  setStatus: (value) => {
    set({ status: value });
    if (value !== "Ongoing") {
      set({ stage: "" });
    }
  },
  setStage: (value) => set({ stage: value }),
  setRpStartDate: (value) => set({ rpStartDate: value }),
  setRpEndDate: (value) => set({ rpEndDate: value }),
  setFirstCPDate: (value) => set({ firstCPDate: value }),
  setCcb: (value) => set({ ccb: value }),
  setCcp: (value) => set({ ccp: value }),
  setIcroa: (value) => set({ icroa: value }),
  setPrePayment: (value) => set({ prePayment: value }),
  setProjectType: (value) => set({ projectType: value }),
  setRegulatedMarket: (value) => set({ regulatedMarket: value }),
  setMethodology: (value) => set({ methodology: value }),
  setRegistrationDate: (value) => set({ registrationDate: value }),
  setDoubleCountingRisk: (value) => set({ doubleCountingRisk: value }),
  setSede: (value) => set({ sede: value }),
  setNotas: (value) => set({ notas: value }),
  setNotasExtra: (value) => set({ notasExtra: value }),
  setFiles: (value) => set({ files: value }),
  setTdInfo: (value) => set({ tdInfo: value }),

  // Funciones para SDG
  setSdg: (value) => {
    set({ sdg: value });
    if (value === "NO" || value === "N/A") {
      set({
        sdgImages: [],
        sdgSelected: [],
        checkedState: new Array(get().sdgListLength).fill(false),
        showModal: false,
      });
    }
  },
  setSdgSelected: (value) => set({ sdgSelected: value }),
  setSdgImages: (value) => set({ sdgImages: value }),
  setCheckedState: (value) => set({ checkedState: value }),
  setShowModal: (value) => set({ showModal: value }),
  setSdgListLength: (length) => set({ sdgListLength: length }),
  // Funcione nuevas añadidas para Buyer Country
  setBuyerCountry: (value) => set({ buyerCountry: value }),

  // Manejo de errores
  setError: (value) => set({ error: value }),
  setErrorFields: (value) => set({ errorFields: value }),

  initializeForm: (initialData) => {
    // Mapear los nombres de las props existentes a los nombres de estado del store
    const mappedData = {
      projectID: initialData.projectID || "",
      standar: initialData.standar || "",
      vintage: initialData.vintage || "",
      volumen: initialData.volumen || "",
      name: initialData.name || "",
      projectLink: initialData.projectLink || "",
      tech: initialData.tech || "",
      corsia: initialData.corsia || "",
      sdg: initialData.sdg || "",
      pais: initialData.pais || "",
      continente: initialData.continente || "",
      disponible: initialData.disponible || "",
      stock: initialData.stock || "",
      precioVenta: initialData.precioVenta || "",
      precioCorp: initialData.precioCorp || "",
      floorPrice: initialData.floorPrice || "",
      purchasePrice: initialData.purchasePrice || "",
      thirdPartPrice: initialData.thirdPartPrice || "",
      contrato: initialData.contrato || "",
      mktDate: initialData.mktDate || "",
      proveedor: initialData.proveedor || "",
      mailingList: initialData.mailingList || "",
      brokerList: initialData.brokerList || "",
      misha: initialData.misha || "",
      equipo: initialData.equipo || "",
      tdService: initialData.tdService || "",
      typeOfContract: initialData.typeOfContract || "",
      actualDataVolume: initialData.actualDataVolume || "",
      netVolume: initialData.netVolume || "",
      sectorTD: initialData.sectorTD || "",
      status: initialData.status || "",
      stage: initialData.stage || "",
      rpStartDate: initialData.rpStartDate || "",
      rpEndDate: initialData.rpEndDate || "",
      firstCPDate: initialData.firstCPDate || "",
      ccb: initialData.ccb || "",
      ccp: initialData.ccp || "",
      icroa: initialData.icroa || "",
      prePayment: initialData.prePayment || "",
      projectType: initialData.projectType || "",
      regulatedMarket: initialData.regulatedMarket || "",
      methodology: initialData.methodology || "",
      registrationDate: initialData.registrationDate || "",
      doubleCountingRisk: initialData.doubleCountingRisk || "",
      sede: initialData.sede || "",
      notas: initialData.notas || "",
      notasExtra: initialData.notasExtra || "",
      tdInfo: initialData.tdInfo || "",
      files: initialData.files || [],
      sdgSelected: initialData.sdgSelected || [],
      sdgImages: initialData.sdgImages || [],
      buyerCountry: initialData.buyerCountry || [],
    };

    set((state) => ({
      ...state,
      ...mappedData,
      // Lógica especial para checkedState basada en sdgSelected
      checkedState: sdgList.map((sdgItem) =>
        (mappedData.sdgSelected || []).includes(sdgItem.name)
      ),
    }));
  },
}));

export default useProjectFormStore;
